
https://www.nuget.org/packages/FarNet.FSharpFar
Far Manager 3.0.4821
FarNet 5.2.3

= 1.2.6 =

Reference resolution for scripts should use predefined and user options.

Sort errors in the error menu by file names and locations.

FCS 10.0.1

= 1.2.5 =

FCS 9.0.1
repo\samples\fsi

= 1.2.4 =

FCS 9.0.0

= 1.2.3 =

Do not show auto tips if an error is shown.

= 1.2.2 =

Color settings: [F11] \ FarNet \ Settings \ FSharpFar Settings.

Use different colors for errors and warnings.

Avoid out of date errors on auto checks.

= 1.2.1 =

Enable auto checks and tips by default if .fsproj is not used.

Do not show tips if a control key is pressed on mouse moves.

= 1.2.0 =

Auto checks on typing.
Use "F11 \ FSharpFar \ Enable auto checks" in F# editors.

Errors are highlighted on auto checks and checks from the menu.
Error messages are shown when the mouse hovers over error areas.

= 1.1.0 =

Auto tips on mouse moves over symbols.
Use "F11 \ FSharpFar \ Enable auto tips" in F# editors.

= 1.0.4 =

Errors on loading interactive sessions are written to the editor.

= 1.0.3 =

Fix #10, scripts of F# projects should use the main config.

= 1.0.2 =

Fix #9, completion of identifiers with double-backticks.

= 1.0.1 =

- Amended processing of paths in //exec and //open.
- //exec uses the config from the script folder.
- Added "samples" to the repository.

= 1.0.0 =

FSharpFar requires just Far Manager, FarNet, and .NET Framework 4.5+.

MSBuild is not needed, thanks to FCS 8.0.0., unless you are using .fsproj
project files for configurations. FSharp.Core is included to the package.

= 0.10.0 =

Interactive

	Generated file names with time stamps are used for interactives.
	You may save interactive files but they are not supposed to be
	reused as interactives.

	Interactive input is stored in a common history file.
	Use [F6] in order to get the interactive history.

Misc

	"Load" uses local .fs.ini and .fsproj, if any.
	Fix a cache error on using updated config files.

= 0.9.0 =

Symbol definitions and references
- Menu "Uses in file" shows uses in the file
- Menu "Uses in project" show uses in the project

= 0.8.1 =

Tips
- Use info from XML docs.

= 0.8.0 =

fs: //open

	Support ".fsproj" as interactive configuration in addition to ".fs.ini".
	Currently all compiled ".fs" files are automatically loaded.
	This is very handy on developing small projects.
	This is slow and rather useless for large.

Auto #load and #use

	On opening interactive with "config.ext", existing files "config.load.fsx"
	and "config.use.fsx" are automatically loaded and used as input. This is
	designed for "config.fsproj" but works for "config.ini" as well.

fs: //exec ... [;; <F# code>]

	Support an optional F# code invoked after loading a file.
	This is the official way to call something with parameters.

= 0.7.1 =

- Improve code completion.
- Avoid opening a session on checks.
- Cache INI configurations on checking.
- Fix conflict between F# and FSF commands.
- Add a sanity check on reading INI config.

= 0.7.0 =

Configuration
- Make configuration from .fsproj when .fs.ini is missing.

Misc
- Improve code completion.

= 0.6.0 =

Proper F# code completion based on configuration info.

= 0.5.0 =

New menu in F# editors
- "Tips"

Misc
- Interactive files .fs.fsx are in the local profile.

= 0.4.1 =

- Work around console output problems (Mantis 3297)
- Support relative "reference" | "load" | "lib" | "use"

= 0.4.0 =

Configuration
- Rename files *.fsi.* -> *.fs.*
- Two sections [fsc] and [fsi]

New menus in F# editors
- "Check"
- "Errors"

= 0.3.4 =

Fix double code completion in interactive.

= 0.3.3 =

Adapt for Far 3.0.4782.
Show echo on `fs: code`.

= 0.3.2 =

Avoid command echo, it makes issues in Far 3.0.4782.
Fixed unwanted modal interactive sessions on //open.

= 0.3.1 =

Avoid loading session on some [Tab] in editor.
Show session loading progress state and title.
fsi.exe does not have to be in the path.

= 0.3.0 =

Use Far 3.0.4775, its FarColorer supports F# syntax highlighting.

The new menu command "Load" in editor saves and loads the current script in the
main session. Its output, warnings, and errors are shown in another editor.

Code completion in editors works for all F# files. Completions is currently
based on the main session, you may configure it using "main.fsi.ini".

Amended //exec for scripts with console output functions (printf, etc.)
So //exec is fine for all scripts, except dealing with console directly.

= 0.2.0 =

Revised the module and F# sessions.
Added commands //exec and //open.
Updated README.

= 0.1.0 =

Code completion by [Tab] in F# interactive editors.

= 0.0.2 =

MSBuild 14 (VS 2015) is required instead of MSBuild 12 (VS 2013).

= 0.0.1 =

Public preview.
